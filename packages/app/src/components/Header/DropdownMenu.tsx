import { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';
import useCrossNavigate from '../../routes/useCrossNavigate';
import { useState } from 'react';
import { useDisconnect } from 'wagmi';
import { Colors } from '../../utils/colors';
import { CloseIcon, Logout, MenuIcon, PlaceholderAvatar } from '../../assets';

// TODO: add to assets folder
const termsUri = `data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M18 3.00001V3.00001C19.6569 3.00001 21 4.34315 21 6.00001L21 8.14286C21 8.47698 21 8.64405 20.9234 8.76602C20.8834 8.82962 20.8296 8.8834 20.766 8.92336C20.644 9 20.477 9 20.1429 9L15 9M18 3.00001V3.00001C16.3431 3.00001 15 4.34315 15 6.00001L15 9M18 3.00001L7 3.00001C5.11438 3.00001 4.17157 3.00001 3.58579 3.58579C3 4.17158 3 5.11439 3 7.00001L3 21L6 20L9 21L12 20L15 21L15 9" stroke="#2B4483" stroke-width="2"/> <path d="M7 7L11 7" stroke="#2B4483" stroke-width="2" stroke-linecap="round"/> <path d="M8 11H7" stroke="#2B4483" stroke-width="2" stroke-linecap="round"/> <path d="M7 15L10 15" stroke="#2B4483" stroke-width="2" stroke-linecap="round"/> </svg>`;
const privacyUri = `data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M12 7.25C9.92893 7.25 8.25 8.92893 8.25 11C8.25 12.2277 8.84026 13.3168 9.75 14.0002V15C9.75 15.9665 10.5335 16.75 11.5 16.75H12.5C13.4665 16.75 14.25 15.9665 14.25 15V14.0002C15.1597 13.3168 15.75 12.2277 15.75 11C15.75 8.92893 14.0711 7.25 12 7.25ZM9.75 11C9.75 9.75736 10.7574 8.75 12 8.75C13.2426 8.75 14.25 9.75736 14.25 11C14.25 11.8319 13.7989 12.5593 13.1245 12.9494C12.8927 13.0835 12.75 13.3309 12.75 13.5987V15C12.75 15.1381 12.6381 15.25 12.5 15.25H11.5C11.3619 15.25 11.25 15.1381 11.25 15V13.5987C11.25 13.3309 11.1073 13.0835 10.8755 12.9494C10.2011 12.5593 9.75 11.8319 9.75 11Z" fill="#2B4483"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M12 1.25C11.0625 1.25 10.1673 1.55658 8.72339 2.05112L7.99595 2.30014C6.51462 2.8072 5.3714 3.19852 4.55303 3.53099C4.14078 3.69846 3.78637 3.86067 3.50098 4.02641C3.22634 4.1859 2.95082 4.38484 2.76363 4.65154C2.5786 4.91516 2.48293 5.23924 2.42281 5.55122C2.36031 5.87556 2.32262 6.26464 2.2983 6.71136C2.25 7.59836 2.25 8.81351 2.25 10.3896V11.9914C2.25 18.0924 6.85803 21.0175 9.59833 22.2146L9.62543 22.2264C9.96523 22.3749 10.2846 22.5144 10.6516 22.6084C11.0391 22.7076 11.4507 22.75 12 22.75C12.5493 22.75 12.9609 22.7076 13.3484 22.6084C13.7154 22.5144 14.0348 22.3749 14.3745 22.2264L14.4017 22.2146C17.142 21.0175 21.75 18.0924 21.75 11.9914V10.3898C21.75 8.81361 21.75 7.5984 21.7017 6.71136C21.6774 6.26464 21.6397 5.87556 21.5772 5.55122C21.5171 5.23924 21.4214 4.91516 21.2364 4.65154C21.0492 4.38484 20.7737 4.1859 20.499 4.02641C20.2136 3.86067 19.8592 3.69846 19.447 3.53099C18.6286 3.19852 17.4854 2.8072 16.004 2.30013L15.2766 2.05112C13.8327 1.55658 12.9375 1.25 12 1.25ZM9.08062 3.5143C10.6951 2.96164 11.3423 2.75 12 2.75C12.6577 2.75 13.3049 2.96164 14.9194 3.5143L15.4922 3.71037C17.0048 4.22814 18.1079 4.60605 18.8824 4.92069C19.269 5.07774 19.5491 5.20935 19.7457 5.32353C19.8428 5.3799 19.9097 5.42642 19.9543 5.46273C19.9922 5.49349 20.0066 5.51092 20.0087 5.51348C20.0106 5.5166 20.0231 5.53737 20.0406 5.58654C20.0606 5.64265 20.0827 5.72309 20.1043 5.83506C20.148 6.06169 20.1811 6.37301 20.2039 6.79292C20.2497 7.63411 20.25 8.80833 20.25 10.4167V11.9914C20.25 17.1665 16.3801 19.7135 13.8012 20.84C13.4297 21.0023 13.2152 21.0941 12.9764 21.1552C12.7483 21.2136 12.47 21.25 12 21.25C11.53 21.25 11.2517 21.2136 11.0236 21.1552C10.7848 21.0941 10.5703 21.0023 10.1988 20.84C7.6199 19.7135 3.75 17.1665 3.75 11.9914V10.4167C3.75 8.80833 3.75028 7.63411 3.79608 6.79292C3.81894 6.37301 3.85204 6.06169 3.89571 5.83506C3.91729 5.72309 3.93944 5.64265 3.95943 5.58654C3.97693 5.5374 3.98936 5.51663 3.99129 5.51349C3.99336 5.51095 4.0078 5.49351 4.04567 5.46273C4.09034 5.42642 4.15722 5.3799 4.25429 5.32353C4.4509 5.20935 4.731 5.07774 5.11759 4.92069C5.8921 4.60605 6.99521 4.22814 8.5078 3.71037L9.08062 3.5143Z" fill="#2B4483"/> <path fill-rule="evenodd" clip-rule="evenodd" d="M12.0001 1.4001C11.0928 1.4001 10.2236 1.69598 8.77209 2.19312L8.04463 2.44215C6.56149 2.94983 5.4231 3.33956 4.60958 3.67005C4.19992 3.83648 3.85293 3.99563 3.57641 4.15622C3.3086 4.31175 3.05517 4.49751 2.88651 4.73781C2.71957 4.97566 2.62889 5.27514 2.5702 5.5797C2.50958 5.89428 2.47235 6.27558 2.44817 6.71961C2.40015 7.60154 2.4001 8.81176 2.4001 10.3897V11.9915C2.4001 17.9997 6.93405 20.8871 9.65848 22.0772L9.68558 22.089C10.0267 22.2381 10.3354 22.3727 10.6889 22.4632C11.0604 22.5583 11.4588 22.6001 12.0001 22.6001C12.5414 22.6001 12.9398 22.5583 13.3113 22.4632C13.6648 22.3727 13.9734 22.2381 14.3146 22.0891L14.3417 22.0772C17.0661 20.8871 21.6001 17.9997 21.6001 11.9915V10.3899C21.6001 8.81185 21.6 7.60158 21.552 6.71961C21.5278 6.27558 21.4906 5.89428 21.43 5.5797C21.3713 5.27514 21.2806 4.97566 21.1137 4.73781C20.945 4.49751 20.6916 4.31175 20.4238 4.15622C20.1473 3.99563 19.8003 3.83648 19.3906 3.67005C18.5771 3.33956 17.4387 2.94983 15.9556 2.44215L15.2281 2.19313C13.7766 1.69599 12.9074 1.4001 12.0001 1.4001ZM8.69807 1.90137C10.1211 1.41397 11.0376 1.1001 12.0001 1.1001C12.9626 1.1001 13.8791 1.41397 15.3021 1.90137L15.3253 1.9093L16.0578 2.16006C17.5349 2.66566 18.6812 3.05806 19.5035 3.39211C19.9183 3.56063 20.2802 3.7259 20.5744 3.89679C20.8559 4.06025 21.1535 4.27237 21.3592 4.56547C21.5624 4.85486 21.663 5.20355 21.7246 5.52293C21.789 5.85704 21.8271 6.25388 21.8516 6.7033C21.9001 7.59443 21.9001 8.81286 21.9001 10.3847V11.9915C21.9001 18.1853 17.218 21.1481 14.4618 22.3521C14.4618 22.3521 14.4618 22.3521 14.4618 22.3521L14.43 22.366C14.0932 22.5132 13.7644 22.6568 13.3857 22.7538C12.9823 22.8571 12.5573 22.9001 12.0001 22.9001C11.4429 22.9001 11.0179 22.8571 10.6145 22.7538C10.2357 22.6568 9.90695 22.5132 9.57015 22.366L9.53839 22.3521C6.7822 21.1481 2.1001 18.1853 2.1001 11.9915V10.3844C2.1001 8.81273 2.1001 7.59438 2.14862 6.7033C2.17309 6.25388 2.21124 5.85704 2.27562 5.52293C2.33717 5.20355 2.43783 4.85486 2.64095 4.56547C2.84667 4.27237 3.14429 4.06025 3.42575 3.89679C3.72 3.7259 4.08185 3.56063 4.49667 3.39211C5.31895 3.05807 6.46528 2.66567 7.94232 2.16008L7.94746 2.15832L8.67488 1.90931L8.69807 1.90137ZM9.03214 3.37248C10.6367 2.82322 11.3115 2.6001 12.0001 2.6001C12.6887 2.6001 13.3635 2.82322 14.9681 3.37248L15.5409 3.56855C17.0516 4.08568 18.1596 4.4652 18.939 4.78181C19.3281 4.9399 19.6156 5.07457 19.8211 5.19392C19.9229 5.253 19.9967 5.30387 20.049 5.34643C20.0942 5.38311 20.116 5.40771 20.1251 5.41885C20.1293 5.42395 20.1331 5.42932 20.1365 5.43492C20.1446 5.44797 20.1614 5.4784 20.182 5.53631C20.2052 5.60149 20.2291 5.68966 20.2517 5.80677C20.2972 6.04319 20.3308 6.36229 20.3538 6.78486C20.3999 7.63114 20.4001 8.81035 20.4001 10.4168V11.9915C20.4001 17.2589 16.4567 19.8438 13.8614 20.9775C13.4922 21.1388 13.2664 21.236 13.0137 21.3007C12.7697 21.3631 12.478 21.4001 12.0001 21.4001C11.5222 21.4001 11.2305 21.3631 10.9865 21.3007C10.7338 21.236 10.508 21.1388 10.1388 20.9775C7.5435 19.8438 3.6001 17.2589 3.6001 11.9915V10.4168C3.6001 8.81035 3.60032 7.63114 3.6464 6.78486C3.66941 6.36229 3.70296 6.04319 3.74852 5.80677C3.77109 5.68966 3.79501 5.60149 3.81822 5.5363C3.83883 5.47844 3.85561 5.44802 3.86364 5.43497C3.8671 5.42935 3.87092 5.42397 3.87508 5.41886C3.88413 5.40775 3.90597 5.38315 3.95115 5.34643C4.00351 5.30387 4.07731 5.253 4.17905 5.19392C4.38455 5.07457 4.6721 4.9399 5.06123 4.78181C5.84061 4.4652 6.9486 4.08568 8.45932 3.56855L9.03214 3.37248ZM12.0001 2.9001C11.3732 2.9001 10.7538 3.10025 9.12929 3.65631L8.55648 3.85239C7.04201 4.37079 5.94378 4.74709 5.17415 5.05975C4.79011 5.21577 4.51744 5.34432 4.32972 5.45334C4.23733 5.50699 4.17736 5.54916 4.14038 5.57922C4.12864 5.58877 4.12036 5.59616 4.11491 5.60131C4.11154 5.60882 4.10672 5.62044 4.10083 5.63696C4.08408 5.684 4.06369 5.75671 4.0431 5.86354C4.00131 6.08039 3.96868 6.38393 3.94596 6.80117C3.90043 7.63727 3.9001 8.80651 3.9001 10.4168V11.9915C3.9001 17.0742 7.69648 19.5833 10.2589 20.7026C10.6328 20.8659 10.8359 20.9524 11.0609 21.01C11.273 21.0643 11.538 21.1001 12.0001 21.1001C12.4622 21.1001 12.7272 21.0643 12.9393 21.01C13.1642 20.9524 13.3674 20.8659 13.7413 20.7026C16.3037 19.5833 20.1001 17.0742 20.1001 11.9915V10.4168C20.1001 8.80651 20.0998 7.63727 20.0542 6.80117C20.0315 6.38393 19.9989 6.08039 19.9571 5.86354C19.9365 5.75672 19.9161 5.684 19.8994 5.63696C19.8935 5.62045 19.8886 5.60882 19.8853 5.60131C19.8798 5.59616 19.8716 5.58877 19.8598 5.57922C19.8228 5.54917 19.7629 5.50699 19.6705 5.45334C19.4828 5.34432 19.2101 5.21577 18.826 5.05975C18.0564 4.74709 16.9582 4.37079 15.4437 3.85239L14.8709 3.65631C13.2464 3.10025 12.627 2.9001 12.0001 2.9001ZM12.0001 7.4001C10.0119 7.4001 8.4001 9.01187 8.4001 11.0001C8.4001 12.1786 8.9665 13.2241 9.84018 13.8803C9.8779 13.9087 9.9001 13.9531 9.9001 14.0003V15.0001C9.9001 15.8838 10.6164 16.6001 11.5001 16.6001H12.5001C13.3838 16.6001 14.1001 15.8838 14.1001 15.0001V14.0003C14.1001 13.9531 14.1223 13.9087 14.16 13.8803C15.0337 13.2241 15.6001 12.1786 15.6001 11.0001C15.6001 9.01187 13.9883 7.4001 12.0001 7.4001ZM8.1001 11.0001C8.1001 8.84619 9.84619 7.1001 12.0001 7.1001C14.154 7.1001 15.9001 8.84619 15.9001 11.0001C15.9001 12.2498 15.3118 13.3615 14.4001 14.0743V15.0001C14.4001 16.0494 13.5494 16.9001 12.5001 16.9001H11.5001C10.4508 16.9001 9.6001 16.0494 9.6001 15.0001V14.0743C8.68837 13.3615 8.1001 12.2498 8.1001 11.0001ZM9.6001 11.0001C9.6001 9.67461 10.6746 8.6001 12.0001 8.6001C13.3256 8.6001 14.4001 9.67461 14.4001 11.0001C14.4001 11.8876 13.9187 12.6635 13.1997 13.0794C13.0143 13.1866 12.9001 13.3846 12.9001 13.5988V15.0001C12.9001 15.221 12.721 15.4001 12.5001 15.4001H11.5001C11.2792 15.4001 11.1001 15.221 11.1001 15.0001V13.5988C11.1001 13.3846 10.9859 13.1866 10.8005 13.0794C10.0815 12.6635 9.6001 11.8876 9.6001 11.0001ZM12.0001 8.9001C10.8403 8.9001 9.9001 9.8403 9.9001 11.0001C9.9001 11.7763 10.3208 12.4553 10.9508 12.8197C11.2288 12.9806 11.4001 13.2775 11.4001 13.5988V15.0001C11.4001 15.0553 11.4449 15.1001 11.5001 15.1001H12.5001C12.5553 15.1001 12.6001 15.0553 12.6001 15.0001V13.5988C12.6001 13.2775 12.7714 12.9806 13.0494 12.8197C13.6794 12.4553 14.1001 11.7763 14.1001 11.0001C14.1001 9.8403 13.1599 8.9001 12.0001 8.9001Z" fill="#2B4483"/> </svg>`;
const reactUri = `data:image/svg+xml;utf8,<svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg"> <path fill-rule="evenodd" clip-rule="evenodd" d="M12.4618 3.04683C13.6652 3.86925 14.8624 4.85943 16.0015 5.99857C17.1407 7.13773 18.1309 8.33494 18.9533 9.53839C19.6544 8.16096 20.0758 6.85665 20.2064 5.72508C20.371 4.298 20.0678 3.24358 19.4122 2.58796C18.7566 1.93235 17.7022 1.62912 16.2751 1.79377C15.1435 1.92433 13.8392 2.34576 12.4618 3.04683ZM19.8687 11.0001C20.8741 9.23497 21.5142 7.47673 21.6965 5.89701C21.8915 4.20664 21.5677 2.62215 20.4729 1.5273C19.378 0.432462 17.7935 0.108624 16.1032 0.303658C14.5235 0.485924 12.7652 1.12603 11.0001 2.13142C9.23497 1.12609 7.47679 0.486026 5.89713 0.303785C4.2068 0.108777 2.62236 0.432625 1.52754 1.52744C0.432717 2.62227 0.108875 4.20674 0.303895 5.89709C0.486149 7.47678 1.12623 9.23499 2.13159 11.0001C1.12632 12.7652 0.486293 14.5233 0.304075 16.103C0.109092 17.7933 0.432947 19.3777 1.52774 20.4725C2.62254 21.5673 4.20694 21.8911 5.89723 21.6961C7.47686 21.5139 9.235 20.8739 11.0001 19.8686C12.7652 20.8739 14.5234 21.514 16.1031 21.6963C17.7934 21.8913 19.3778 21.5674 20.4727 20.4726C21.5675 19.3778 21.8913 17.7934 21.6963 16.103C21.5141 14.5234 20.874 12.7652 19.8687 11.0001ZM18.1195 11.0001C17.2825 9.67499 16.2143 8.33261 14.9409 7.05923C13.6675 5.78587 12.3252 4.71761 11.0001 3.88069C9.67508 4.71759 8.3328 5.7858 7.05951 7.05909C5.78609 8.33252 4.71778 9.67495 3.88085 11.0001C4.71776 12.3252 5.78599 13.6675 7.05932 14.9408C8.33267 16.2142 9.67501 17.2824 11.0001 18.1193C12.3252 17.2824 13.6677 16.2141 14.9411 14.9407C16.2144 13.6674 17.2826 12.3251 18.1195 11.0001ZM12.4618 18.9532C13.6653 18.1307 14.8625 17.1405 16.0017 16.0013C17.1408 14.8623 18.1309 13.6652 18.9533 12.4618C19.6543 13.8392 20.0757 15.1435 20.2062 16.275C20.3708 17.702 20.0676 18.7563 19.412 19.4119C18.7564 20.0675 17.702 20.3708 16.275 20.2061C15.1435 20.0756 13.8392 19.6542 12.4618 18.9532ZM9.53833 18.9532C8.33492 18.1308 7.13777 17.1406 5.99866 16.0015C4.85956 14.8624 3.86943 13.6653 3.04702 12.4619C2.34607 13.8392 1.92471 15.1434 1.79419 16.2749C1.62958 17.7019 1.93281 18.7562 2.5884 19.4118C3.24399 20.0674 4.29835 20.3706 5.72534 20.206C6.85681 20.0755 8.161 19.6541 9.53833 18.9532ZM3.04699 9.53837C3.86944 8.33488 4.85966 7.13763 5.99885 5.99843C7.13792 4.85936 8.33502 3.86924 9.53837 3.04685C8.16098 2.34583 6.85673 1.92444 5.72522 1.7939C4.29819 1.62927 3.2438 1.9325 2.58821 2.5881C1.9326 3.24371 1.62937 4.29811 1.79401 5.72517C1.92456 6.8567 2.34596 8.16097 3.04699 9.53837ZM11.0002 9.24995C10.0337 9.24995 9.2502 10.0335 9.2502 11C9.2502 11.9665 10.0337 12.75 11.0002 12.75C11.9667 12.75 12.7502 11.9665 12.7502 11C12.7502 10.0335 11.9667 9.24995 11.0002 9.24995ZM7.7502 11C7.7502 9.20503 9.20527 7.74995 11.0002 7.74995C12.7951 7.74995 14.2502 9.20503 14.2502 11C14.2502 12.7949 12.7951 14.25 11.0002 14.25C9.20527 14.25 7.7502 12.7949 7.7502 11Z" fill="#2B4483"/> </svg>`;

interface DropdownMenuProps {
  isDesktopResolution: boolean;
  address: `0x${string}` | undefined;
  dropdownOffset: { top: number; right: number };
}

export const DropdownMenu = (props: DropdownMenuProps) => {
  const { isDesktopResolution, address, dropdownOffset } = props;

  const { disconnect } = useDisconnect();
  const { navigate } = useCrossNavigate();
  const [openDropdown, setOpenDropdown] = useState<boolean>(false);

  return (
    <>
      {isDesktopResolution && (
        <TouchableOpacity
          style={{
            ...styles.menuIconContainer,
            maxWidth: 40,
            height: 40,
          }}
          onPress={() => setOpenDropdown(!openDropdown)}>
          <Image source={openDropdown ? CloseIcon : MenuIcon} resizeMode="contain" style={styles.menuIcon} />
        </TouchableOpacity>
      )}
      {!isDesktopResolution && (
        <TouchableOpacity
          style={{
            ...styles.menuIconContainer,
            maxWidth: 40,
            height: 40,
          }}
          onPress={() => setOpenDropdown(!openDropdown)}>
          <Image source={openDropdown ? CloseIcon : MenuIcon} resizeMode="contain" style={styles.menuIcon} />
        </TouchableOpacity>
      )}
      {openDropdown && (
        <View style={[styles.dropdownContainer, dropdownOffset]}>
          {!!address && (
            <>
              <TouchableOpacity
                style={styles.dropdownItem}
                onPress={() => {
                  navigate('/profile/' + address);
                }}>
                <Image source={PlaceholderAvatar} resizeMode="contain" style={{ width: 32, height: 32 }} />
                <Text style={styles.dropdownMyProfileText}>My Profile</Text>
              </TouchableOpacity>
              <View style={styles.dropdownSeparator} />
            </>
          )}
          <TouchableOpacity
            style={styles.dropdownItem}
            onPress={() => {
              navigate('/about');
            }}>
            <Image source={{ uri: reactUri }} resizeMode="contain" style={{ width: 20, height: 20 }} />
            <Text style={styles.dropdownText}>About GoodCollective</Text>
          </TouchableOpacity>
          <View style={styles.dropdownSeparator} />
          <TouchableOpacity
            style={styles.dropdownItem}
            onPress={() => {
              setOpenDropdown(false);
              navigate('/tandc');
            }}>
            <Image source={{ uri: termsUri }} resizeMode="contain" style={{ width: 20, height: 20 }} />
            <Text style={styles.dropdownText}>Terms & Conditions</Text>
          </TouchableOpacity>
          <View style={styles.dropdownSeparator} />
          <TouchableOpacity
            style={styles.dropdownItem}
            onPress={() => {
              setOpenDropdown(false);
              navigate('/privacy');
            }}>
            <Image source={{ uri: privacyUri }} resizeMode="contain" style={{ width: 20, height: 20 }} />
            <Text style={styles.dropdownText}>Privacy Policy</Text>
          </TouchableOpacity>
          <View style={styles.dropdownSeparator} />
          <TouchableOpacity
            style={styles.dropdownItem}
            onPress={() => {
              disconnect();
              setOpenDropdown(false);
              navigate('/');
            }}>
            <Image source={Logout} resizeMode="contain" style={{ width: 20, height: 20 }} />
            <Text style={styles.dropdownText}>Log Out</Text>
          </TouchableOpacity>
          <Text style={styles.builtByText}>v1 - Built by dOrg & GoodLabs</Text>
        </View>
      )}
    </>
  );
};

const styles = StyleSheet.create({
  menuIconContainer: {
    backgroundColor: Colors.purple[300],
    borderRadius: 40,
    width: 44,
    height: 44,
    justifyContent: 'center',
    alignItems: 'center',
  },
  menuContainerFlex: {
    flex: 0.5,
  },
  menuIconContainerMobile: {
    flex: 0,
  },
  menuIcon: {
    width: 22,
    height: 25,
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  builtByText: {
    color: Colors.purple[200],
    fontSize: 12,
    marginLeft: 50,
    marginTop: 20,
  },
  dropdownContainer: {
    height: 'auto',
    width: 272,
    backgroundColor: Colors.purple[100],
    paddingTop: 20,
    paddingBottom: 20,
    position: 'absolute',
  },
  dropdownItem: {
    flex: 1,
    height: 56,
    padding: 20,
    width: '100%',
    alignItems: 'center',
    justifyContent: 'flex-start',
    flexDirection: 'row',
    paddingTop: 20,
  },
  dropdownSeparator: {
    width: '100%',
    height: 2,
    backgroundColor: Colors.blue[100],
    marginTop: 5,
    marginBottom: 5,
  },
  dropdownMyProfileText: {
    fontWeight: 'bold',
    fontSize: 16,
    marginLeft: 15,
    color: Colors.purple[400],
  },
  dropdownText: {
    fontSize: 14,
    marginLeft: 15,
    color: Colors.purple[400],
  },
});
